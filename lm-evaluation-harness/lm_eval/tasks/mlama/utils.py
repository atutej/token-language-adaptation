import argparse
from typing import Dict, List
import numpy as np
import yaml
from datasets import get_dataset_config_names


# Different languages that are part of xnli.
# These correspond to dataset names (Subsets) on HuggingFace.
# A yaml file is generated by this script for each language.

#LANGUAGES = get_dataset_config_names("atutej/m_lama")


def doc_to_text(doc):
    return ''

def doc_to_choice(doc):
    choices = []
    sub_label = doc["sub_label"]
    template = doc["template"].replace("[X]", sub_label)
    cols = doc["options"]
    for col in cols:
        choice = template.replace("[Y]", col)
        choices.append(choice)
    return choices

def doc_to_target(doc):
    options =  doc["options"]
    return options.index(doc["obj_label"])

def gen_lang_yamls(output_dir: str, overwrite: bool) -> None:
    """
    Generate a yaml file for each language.

    :param output_dir: The directory to output the files to.
    :param overwrite: Whether to overwrite files if they already exist.
    """
    err = []
    for lang in LANGUAGES:
        file_name = f"mlama_{lang}.yaml"
        try:
            with open(
                f"{output_dir}/{file_name}", "w" if overwrite else "x", encoding="utf8"
            ) as f:
                f.write("# Generated by utils.py\n")
                yaml.dump(
                    {
                        "include": "mlama_common_yaml",
                        "dataset_name": lang,
                        "task": f"mlama_{lang}",
                    },
                    f,
                    allow_unicode=True,
                )
        except FileExistsError:
            err.append(file_name)

    if len(err) > 0:
        raise FileExistsError(
            "Files were not created because they already exist (use --overwrite flag):"
            f" {', '.join(err)}"
        )


def main() -> None:
    """Parse CLI args and generate language-specific yaml files."""
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--overwrite",
        default=False,
        action="store_true",
        help="Overwrite files if they already exist",
    )
    parser.add_argument(
        "--output-dir", default=".", help="Directory to write yaml files to"
    )
    args = parser.parse_args()

    gen_lang_yamls(output_dir=args.output_dir, overwrite=args.overwrite)


if __name__ == "__main__":
    main()